name: Docker Demo CICD Workflow

# When this action will be executed
on:
  
  # # Automatically trigger it when detected changes in repo
  push:
    branches: [main, akhil/AS-427-CICD-for-github-action-that-tags-a-commit-and-executes-Docker-build]
    paths: 
       - 'public/version.txt'


jobs:
  build-demo-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: 'Reading Semantic Version'
        id: Semver
        run: |
          VersionTag=`cat public/version.txt`
          echo "VersionTag=${VersionTag}" >> $GITHUB_OUTPUT
      
      - name: 'Tagging Latest Commit to Semantic Version'
        id: Tag
        run: |
          git config --global user.email “akhil.nallamothu@ais.com”
          git config --global user.name “akhilnallamothu”
          git tag -f ${{ steps.Semver.outputs.VersionTag }} -m "Updated to ${{ steps.Semver.outputs.VersionTag }}"
          git push -f https://akhilnallamothu:${{ secrets.GITHUB_TOKEN }}@github.com/markarnott/core-startup-stack-rails.git ${{ steps.Semver.outputs.VersionTag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.Semver.outputs.VersionTag }}
          file: ./Dockerfile
          context: ./
          # build-args: |
          #   RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          #   SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
        
      
      
      # - name: 'Login via Azure CLI'
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}


      # - name: 'Deploy App'
      #   id: deploy
      #   run: |
      #     sed -i 's/ck_test:1.0.0/${{ secrets.DOCKER_REGISTRY }}\/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.setTag.outputs.deployTag }}/g' ./docker-compose.yml
      #     az webapp config container set --resource-group ck-app-lab-eastus-rg-01 --name ck-lab-eastus-app-01 --multicontainer-config-type compose --multicontainer-config-file docker-compose.yml